"""created_comment_vote_log

Revision ID: f8106e0b855f
Revises: a42a4cca84c4
Create Date: 2025-05-12 13:02:41.293633

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f8106e0b855f'
down_revision: Union[str, None] = 'a42a4cca84c4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comment_vote_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_anonymous_id', sa.UUID(), nullable=False),
    sa.Column('comment_anonymous_id', sa.UUID(), nullable=False),
    sa.Column('vote_type', sa.Enum('UPVOTE', 'DOWNVOTE', name='comment_vote_enum_type'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['comment_anonymous_id'], ['comments.anonymous_comment_id'], ),
    sa.ForeignKeyConstraint(['user_anonymous_id'], ['users.anonymous_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_anonymous_id', 'comment_anonymous_id', name='uq_user_comment_vote_uc')
    )
    op.create_index(op.f('ix_comment_vote_logs_id'), 'comment_vote_logs', ['id'], unique=False)
    op.add_column('comments', sa.Column('upvotes', sa.Integer(), nullable=False, server_default=sa.text('0')))
    op.add_column('comments', sa.Column('downvotes', sa.Integer(), nullable=False, server_default=sa.text('0')))
    op.drop_index('ix_comments_author_id', table_name='comments')
    op.drop_index('ix_comments_post_id', table_name='comments')
    op.alter_column('post_vote_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_post_vote_logs_post_anonymous_id', table_name='post_vote_logs')
    op.drop_index('ix_post_vote_logs_user_anonymous_id', table_name='post_vote_logs')
    op.drop_constraint('uq_post_vote_logs_user_anonymous_id_post_anonymous_id', 'post_vote_logs', type_='unique')
    op.create_unique_constraint('uq_user_post_vote_uc', 'post_vote_logs', ['user_anonymous_id', 'post_anonymous_id'])
    op.alter_column('posts', 'anonymous_post_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('posts', 'title',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('posts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_posts_author_anonymous_id', table_name='posts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_posts_author_anonymous_id', 'posts', ['author_anonymous_id'], unique=False)
    op.alter_column('posts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('posts', 'title',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('posts', 'anonymous_post_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint('uq_user_post_vote_uc', 'post_vote_logs', type_='unique')
    op.create_unique_constraint('uq_post_vote_logs_user_anonymous_id_post_anonymous_id', 'post_vote_logs', ['user_anonymous_id', 'post_anonymous_id'])
    op.create_index('ix_post_vote_logs_user_anonymous_id', 'post_vote_logs', ['user_anonymous_id'], unique=False)
    op.create_index('ix_post_vote_logs_post_anonymous_id', 'post_vote_logs', ['post_anonymous_id'], unique=False)
    op.alter_column('post_vote_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index('ix_comments_post_id', 'comments', ['post_id'], unique=False)
    op.create_index('ix_comments_author_id', 'comments', ['author_id'], unique=False)
    op.drop_column('comments', 'downvotes')
    op.drop_column('comments', 'upvotes')
    op.drop_index(op.f('ix_comment_vote_logs_id'), table_name='comment_vote_logs')
    op.drop_table('comment_vote_logs')
    # ### end Alembic commands ###
